<?php

/**
 * BaseServico
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $tipo
 * @property timestamp $data_abertura
 * @property timestamp $data_inicio_atendimento
 * @property timestamp $data_fim_atendimento
 * @property integer $cliente_id
 * @property integer $equipamento_id
 * @property integer $situacao_id
 * @property integer $usuario_id
 * @property Cliente $Cliente
 * @property Equipamento $Equipamento
 * @property Situacao $Situacao
 * @property Usuario $Usuario
 * @property Doctrine_Collection $EquipamentoCondicao
 * @property Doctrine_Collection $EquipamentoProblema
 * @property Doctrine_Collection $EquipamentoSuporte
 * @property Doctrine_Collection $Movimentacao
 * @property Doctrine_Collection $Numerador
 * @property Doctrine_Collection $Problema
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseServico extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('servico');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('tipo', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('data_abertura', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('data_inicio_atendimento', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('data_fim_atendimento', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('cliente_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('equipamento_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('situacao_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cliente', array(
             'local' => 'cliente_id',
             'foreign' => 'id'));

        $this->hasOne('Equipamento', array(
             'local' => 'equipamento_id',
             'foreign' => 'id'));

        $this->hasOne('Situacao', array(
             'local' => 'situacao_id',
             'foreign' => 'id'));

        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id'));

        $this->hasMany('EquipamentoCondicao', array(
             'local' => 'id',
             'foreign' => 'servico_id'));

        $this->hasMany('EquipamentoProblema', array(
             'local' => 'id',
             'foreign' => 'servico_id'));

        $this->hasMany('EquipamentoSuporte', array(
             'local' => 'id',
             'foreign' => 'servico_id'));

        $this->hasMany('Movimentacao', array(
             'local' => 'id',
             'foreign' => 'servico_id'));

        $this->hasMany('Numerador', array(
             'local' => 'id',
             'foreign' => 'servico_id'));

        $this->hasMany('Problema', array(
             'local' => 'id',
             'foreign' => 'servico_id'));
    }
}