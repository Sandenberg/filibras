<?php

/**
 * BaseUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nome
 * @property string $cargo
 * @property string $email
 * @property string $apelido
 * @property date $nascimento
 * @property integer $sexo
 * @property string $login
 * @property string $senha
 * @property date $data_cadastro
 * @property string $avatar
 * @property integer $status
 * @property integer $usuario_grupo_id
 * @property UsuarioGrupo $UsuarioGrupo
 * @property Doctrine_Collection $Entrada
 * @property Doctrine_Collection $FinalizarOrdemServico
 * @property Doctrine_Collection $Log
 * @property Doctrine_Collection $Movimentacao
 * @property Doctrine_Collection $OrdemServico
 * @property Doctrine_Collection $Saida
 * @property Doctrine_Collection $Servico
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuario extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('nome', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('cargo', 'string', 60, array(
             'type' => 'string',
             'length' => 60,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('apelido', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nascimento', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('sexo', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('login', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('senha', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('data_cadastro', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('avatar', 'string', 36, array(
             'type' => 'string',
             'length' => 36,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('usuario_grupo_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UsuarioGrupo', array(
             'local' => 'usuario_grupo_id',
             'foreign' => 'id'));

        $this->hasMany('Entrada', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('FinalizarOrdemServico', array(
             'local' => 'id',
             'foreign' => 'audit'));

        $this->hasMany('Log', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('Movimentacao', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('OrdemServico', array(
             'local' => 'id',
             'foreign' => 'audt'));

        $this->hasMany('Saida', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('Servico', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));
    }
}